name: Kubernetes Kustomize Multi-Namespace Deploy

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Docker image tag (short commit SHA)'
        required: true
      confirmation:
        description: 'Type "yes" to confirm deploy'
        required: true
        default: 'no'

env:
  AWS_REGION: eu-west-2
  CLUSTER_NAME: my-eks-cluster
  ECR_REPO: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-west-2.amazonaws.com/eksapp

jobs:
  deploy:
    name: Deploy via Kustomize
    runs-on: ubuntu-latest

    steps:
      - name: Confirm deployment
        run: |
          if [ "${{ github.event.inputs.confirmation }}" != "yes" ]; then
            echo "Deployment cancelled."
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

      - name: Install kustomize
        run: |
          curl -s https://api.github.com/repos/kubernetes-sigs/kustomize/releases/latest \
            | grep browser_download_url \
            | grep linux \
            | cut -d '"' -f 4 \
            | xargs curl -sL \
            | tar xz \
            && sudo mv kustomize /usr/local/bin/

      - name: Ensure required namespaces exist
        run: |
          namespaces=("landing-page" "monitoring" "argo-cd" "cert-manager")
          for ns in "${namespaces[@]}"; do
            echo "Ensuring namespace '$ns' exists..."
            kubectl get namespace $ns >/dev/null 2>&1 || kubectl create namespace $ns
          done

      - name: Set image in kustomization
        run: |
          IMAGE_URI="${ECR_REPO}:${{ github.event.inputs.image_tag }}"
          echo "Setting image: $IMAGE_URI"
          kustomize edit set image "eksapp=$IMAGE_URI"

      - name: Check for conflicting ingresses (optional warning)
        run: |
          echo "Checking for ingress conflicts..."
          kubectl get ingress -A -o custom-columns=NS:.metadata.namespace,NAME:.metadata.name,HOSTS:.spec.rules[*].host,PATHS:.spec.rules[*].http.paths[*].path

      # Optional cleanup step (uncomment to enable)
  

      - name: Deploy with kustomize
        run: |
          kustomize build . | kubectl apply -f -

      - name: Wait for all deployments in relevant namespaces
        run: |
          namespaces=("default" "landing-page" "argo-cd" "monitoring")
          for ns in "${namespaces[@]}"; do
            echo "Checking deployments in namespace: $ns"
            deployments=$(kubectl get deploy -n $ns -o custom-columns=NAME:.metadata.name --no-headers)
            for dep in $deployments; do
              echo "Waiting for rollout of deployment: $dep in $ns"
              kubectl rollout status deployment/$dep -n $ns --timeout=300s
            done
          done

      - name: Wait for TLS certificates
        run: |
          echo "Waiting for CertManager certificates to be ready..."
          namespaces=("default" "landing-page" "argo-cd" "monitoring" "cert-manager")
          for ns in "${namespaces[@]}"; do
            certificates=$(kubectl get certificates -n $ns -o custom-columns=NAME:.metadata.name --no-headers 2>/dev/null)
            for cert in $certificates; do
              echo "Checking certificate: $cert in namespace: $ns"
              kubectl wait --for=condition=Ready certificate/$cert -n $ns --timeout=300s
            done
          done
          echo "All certificates are ready!"
