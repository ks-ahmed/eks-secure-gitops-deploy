name: Full Destroy Pipeline

on:
  workflow_dispatch:
    inputs:
      confirmation:
        description: 'Type "yes" to confirm full destruction'
        required: true
        default: 'no'

env:
  AWS_REGION: eu-west-2
  EKS_CLUSTER_NAME: eks-proj

jobs:
  cleanup-k8s:
    runs-on: ubuntu-latest
    outputs:
      proceed: ${{ steps.check_confirm.outputs.confirmed }}
    steps:
      - id: check_confirm
        run: |
          if [ "${{ github.event.inputs.confirmation }}" != "yes" ]; then
            echo "confirmed=no" >> $GITHUB_OUTPUT
            echo "Cleanup cancelled."
            exit 1
          else
            echo "confirmed=yes" >> $GITHUB_OUTPUT
          fi

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update kubeconfig for EKS cluster
        run: |
          aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

      - name: Delete Kubernetes resources
        run: |
          kubectl delete -f cert-man/issuer.yml || true
          kubectl delete -f argocd/app-argo.yml || true
          kubectl delete -f argocd/apps/2048.yml || true


  destroy-infra:
    runs-on: ubuntu-latest
    needs: cleanup-k8s
    if: needs.cleanup-k8s.outputs.proceed == 'yes'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.8

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Destroy
        working-directory: terraform
        run: terraform destroy -auto-approve
